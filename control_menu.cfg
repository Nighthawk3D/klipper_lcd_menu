
### menu control ###
[menu __main __control]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
index: 5
name: Control

## Create new homing menu
[menu __main __control __homing]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
index: 1
name: Homing

[menu __main __control __homing __home]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Home All
gcode: G28

[menu __main __control __homing __homez]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Home Z
gcode: G28 Z

[menu __main __control __homing __homexy]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Home X/Y
gcode: G28 X Y

[menu __main __control __homing __z_tilt]
type: command
enable: {not printer.idle_timeout.state == "Printing" and ('z_tilt' in printer)}
name: Z Tilt
gcode: Z_TILT_ADJUST

[menu __main __control __homing __quad_gantry_level]
type: command
enable: {not printer.idle_timeout.state == "Printing" and ('quad_gantry_level' in printer)}
name: Quad Gantry Lvl
gcode: QUAD_GANTRY_LEVEL

[menu __main __control __zoffset_]
type: input
name: Z Offset:{'%05.3f' % menu.input}
input: {printer.gcode_move.homing_origin.z}
input_min: -5
input_max: 5
input_step: 0.005
realtime: True
gcode:
    SET_GCODE_OFFSET Z={'%.3f' % menu.input} MOVE=1

[menu __main __control __homing __bed_mesh]
type: command
enable: {not printer.idle_timeout.state == "Printing" and ('bed_mesh' in printer)}
name: Bed Mesh
gcode: BED_MESH_CALIBRATE

## Disable old homing options
[menu __main __control __home]
type: disabled

[menu __main __control __homez]
type: disabled

[menu __main __control __homexy]
type: disabled

[menu __main __control __z_tilt]
type: disabled

[menu __main __control __quad_gantry_level]
type: disabled

[menu __main __control __bed_mesh]
type: disabled

## Create Move menu
[menu __main __control __movement]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
index: 2
name: Move

### menu move 10mm ###
[menu __main __control __movement __move_10mm]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Move 10mm

[menu __main __control __movement __move_10mm __axis_x]
type: input
name: Move X:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.x}
input_min: {printer.toolhead.axis_minimum.x}
input_max: {printer.toolhead.axis_maximum.x}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 X{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __movement __move_10mm __axis_y]
type: input
name: Move Y:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.y}
input_min: {printer.toolhead.axis_minimum.y}
input_max: {printer.toolhead.axis_maximum.y}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Y{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __movement __move_10mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move Z:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: {printer.toolhead.axis_maximum.z}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Z{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __movement __move_10mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move E:{'%+06.1f' % menu.input}
input: 0
input_min: -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max: {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    M83
    G1 E{menu.input} F240
    RESTORE_GCODE_STATE NAME=__move__axis

### menu move 1mm ###
[menu __main __control __movement __move_1mm]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Move 1mm

[menu __main __control __movement __move_1mm __axis_x]
type: input
name: Move X:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.x}
input_min: {printer.toolhead.axis_minimum.x}
input_max: {printer.toolhead.axis_maximum.x}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 X{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __movement __move_1mm __axis_y]
type: input
name: Move Y:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.y}
input_min: {printer.toolhead.axis_minimum.y}
input_max: {printer.toolhead.axis_maximum.y}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Y{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __movement __move_1mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move Z:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: {printer.toolhead.axis_maximum.z}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Z{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __movement __move_1mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move E:{'%+06.1f' % menu.input}
input: 0
input_min: -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max: {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    M83
    G1 E{menu.input} F240
    RESTORE_GCODE_STATE NAME=__move__axis

### menu move 0.1mm ###
[menu __main __control __movement __move_01mm]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Move 0.1mm

[menu __main __control __movement __move_01mm __axis_x]
type: input
name: Move X:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.x}
input_min: {printer.toolhead.axis_minimum.x}
input_max: {printer.toolhead.axis_maximum.x}
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 X{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __movement __move_01mm __axis_y]
type: input
name: Move Y:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.y}
input_min: {printer.toolhead.axis_minimum.y}
input_max: {printer.toolhead.axis_maximum.y}
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Y{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __movement __move_01mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move Z:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: {printer.toolhead.axis_maximum.z}
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Z{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __movement __move_01mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move E:{'%+06.1f' % menu.input}
input: 0
input_min: -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max: {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    M83
    G1 E{menu.input} F240
    RESTORE_GCODE_STATE NAME=__move__axis

## Disable old move menus
[menu __main __control __move_10mm]
type: disabled

[menu __main __control __move_1mm]
type: disabled

[menu __main __control __move_01mm]
type: disabled

[menu __main __control __disable]
type: command
index: 4
name: Steppers off
gcode:
    M84
    M18

[menu __main __control __fanonoff]
type: input
enable: {'fan' in printer}
index: 5
name: Fan: {'ON ' if menu.input else 'OFF'}
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 1
gcode:
    M106 S{255 if menu.input else 0}

[menu __main __control __fanspeed]
type: input
enable: {'fan' in printer}
index: 6
name: Fan speed: {'%3d' % (menu.input*100)}%
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 0.01
gcode:
    M106 S{'%d' % (menu.input*255)}

## Disable lighting controls since we have a menu for that
[menu __main __control __caselightonoff]
type: disabled

[menu __main __control __caselightpwm]
type: disabled

[menu __main __control __firmwareretract]
type: list
name: Retraction
index: 5
enable: {('firmware_retraction' in printer)}

[menu __main __control __firmwareretract __retractdist]
type: input
name: Retract: {'%.2f' % menu.input}
input: {printer.firmware_retraction.retract_length}
input_min: 0
input_max: 10
input_step: 0.01
realtime: True
gcode:
    SET_RETRACTION  RETRACT_LENGTH={'%.2f' % menu.input}

[menu __main __control __firmwareretract __unretractdist]
type: input
name: Unretract: {'%.2f' % menu.input}
input: {printer.firmware_retraction.unretract_extra_length}
input_min: 0
input_max: 5
input_step: 0.01
realtime: True
gcode:
    SET_RETRACTION  UNRETRACT_EXTRA_LENGTH={'%.2f' % menu.input}

[menu __main __control __firmwareretract __retractspeed]
type: input
name: Ret_Speed:{'%1d' % menu.input}
input: {printer.firmware_retraction.retract_speed}
input_min: 0
input_max: 100
input_step: 1
realtime: True
gcode:
    SET_RETRACTION  RETRACT_SPEED={'%1d' % menu.input}

[menu __main __control __firmwareretract __unretractspeed]
type: input
name: Unr_Speed:{'%1d' % menu.input}
input: {printer.firmware_retraction.unretract_speed}
input_min: 0
input_max: 100
input_step: 1
realtime: True
gcode:
    SET_RETRACTION  UNRETRACT_SPEED={'%1d' % menu.input}

[menu __main __control __pressureadvance]
type: list
enable: {('extruder' in printer) and ('pressure_advance' in printer.extruder)}
name: Pressure Advance

[menu __main __control __pressureadvance __pa]
type: input
name: Press_Adv:{'%.3f' % menu.input}
input: {printer.extruder.pressure_advance}
input_min: 0
input_max: 10
input_step: 0.001
realtime: True
gcode:
    SET_PRESSURE_ADVANCE ADVANCE={'%f' % menu.input}

[menu __main __control __pressureadvance __smooth]
type: input
name: PA_Smooth:{'%.2f' % menu.input}
input: {printer.extruder.smooth_time}
input_min: 0
input_max: 0.2
input_step: 0.01
realtime: True
gcode:
    SET_PRESSURE_ADVANCE SMOOTH_TIME={'%f' % menu.input}

[menu __main __control __printerlimits __maxvelocity]
type: input
name: Max_Veloc:{'%.d' % menu.input}
input: {printer.toolhead.max_velocity}
input_min: 1
input_max: 1000
input_step: 1
realtime: True
gcode:
    SET_VELOCITY_LIMIT VELOCITY={'%d' % menu.input}

[menu __main __control __printerlimits __maxaccel]
type: input
name: Max_Accel:{'%.d' % menu.input}
input: {printer.toolhead.max_accel}
input_min: 1
input_max: 10000
input_step: 10
realtime: True
gcode:
    SET_VELOCITY_LIMIT ACCEL={'%d' % menu.input}

[menu __main __control __printerlimits __maxacceltodecel]
type: input
name: Ac_To_Dec:{'%.d' % menu.input}
input: {printer.toolhead.max_accel_to_decel}
input_min: 1
input_max: 10000
input_step: 10
realtime: True
gcode:
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL={'%d' % menu.input}

[menu __main __control __printerlimits __squarecornervelocity]
type: input
name: Sq_Co_Vel:{'%.d' % menu.input}
input: {printer.toolhead.square_corner_velocity}
input_min: 0
input_max: 100
input_step: 1
realtime: True
gcode:
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={'%d' % menu.input}