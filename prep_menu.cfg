### menu Prep ###
[menu __main __Prep]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Prep
index: 1

[menu __main __Prep __prepABS]
type: command
enable: {not printer.idle_timeout.state == "Printing" and ('gcode_macro PREP_ABS' in printer)}
name: Prep ABS
gcode:
    Prep_ABS

[menu __main __Prep __prepPLA]
type: command
enable: {not printer.idle_timeout.state == "Printing" and ('gcode_macro PREP_PLA' in printer)}
name: Prep PLA
gcode:
    Prep_PLA

[menu __main __Prep __prepPETG]
type: command
enable: {not printer.idle_timeout.state == "Printing" and ('gcode_macro PREP_PETG' in printer)}
name: Prep PETG
gcode:
    Prep_PETG

# [menu __main __Prep __home]
# type: command
# enable: {not printer.idle_timeout.state == "Printing"}
# name: Home All
# gcode: G28

[menu __main __Prep __z_tilt]
type: command
enable: {not printer.idle_timeout.state == "Printing" and ('z_tilt' in printer)}
name: Z Tilt > Park
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    Z_TILT_ADJUST
    SAVE_GCODE_STATE NAME=PARK
    G90                                ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z20 F10000
    RESTORE_GCODE_STATE NAME=PARK

[menu __main __Prep __Qgl]
type: command
enable: {not printer.idle_timeout.state == "Printing" and ('quad_gantry_level' in printer)}
name: QGL > Park
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    QUAD_GANTRY_LEVEL
    SAVE_GCODE_STATE NAME=PARK
    G90                                ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z30 F10000
    RESTORE_GCODE_STATE NAME=PARK

[menu __main __Prep __Park]
type: command
name: Park
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARK
    G90                                ; absolute positioning
    {% if "delta_calibrate" in printer %}
    G0 X0 Y0 Z30 F10000
    {% else %}
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z30 F10000
    {% endif %}
    RESTORE_GCODE_STATE NAME=PARK

[menu __main __Prep __ParkRear]
type: command
name: Park Rear
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKREAR
    G90                              ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y-5} Z80 F10000
    RESTORE_GCODE_STATE NAME=PARKREAR
