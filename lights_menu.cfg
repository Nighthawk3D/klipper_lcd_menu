### menu lights ###
[menu __main __lights]
type: list
name: Lights

### lights macros
[menu __main __lights __lightson]
type: command
enable: {('gcode_macro LIGHTS_ON' in printer)}
name: Lights On
gcode:
    LIGHTS_ON

[menu __main __lights __lightsoff]
type: command
enable: {('gcode_macro LIGHTS_OFF' in printer)}
name: Lights Off
gcode:
    LIGHTS_OFF
    SET_PIN PIN=caselight VALUE={1 if menu.input else 0}

### case light
[menu __main __lights __lightspwm]
type: input
enable: {'output_pin caselight' in printer}
name: Lights: {'%3d' % (menu.input*100)}%
input: {printer['output_pin caselight'].value}
input_min: 0.0
input_max: 1.0
input_step: 0.05
gcode:
    SET_PIN PIN=caselight VALUE={menu.input}

[menu __main __lights __caselightonoff]
type: input
enable: {'output_pin caselight' in printer}
name: Lights: {'ON ' if menu.input else 'OFF'}
input: {printer['output_pin caselight'].value}
input_min: 0
input_max: 1
input_step: 1
gcode:
    SET_PIN PIN=caselight VALUE={1 if menu.input else 0}

[menu __main __lights __nozzleledson]
type: command
enable: {('gcode_macro set_nozzle_leds_on' in printer)}
name: Nozzle LEDs On
gcode:
    set_nozzle_leds_on

[menu __main __lights __nozzleledsoff]
type: command
enable: {('gcode_macro set_nozzle_leds_off' in printer)}
name: Nozzle LEDs Off
gcode:
    set_nozzle_leds_off

### menu stealthburner lights ###
[menu __main __lights __status_leds]
type: list
name: Status LEDs
enable: {('gcode_macro status_ready' in printer)}

[menu __main __lights __status_leds __statusready]
type: command
name: Status Ready
gcode:
    status_ready

[menu __main __lights __status_leds __statusoff]
type: command
name: Status Off
gcode:
    status_off

[menu __main __lights __status_leds __statusprinting]
type: command
name: Status Printing
gcode:
    status_printing

[menu __main __lights __status_leds __statusbusy]
type: command
name: Status Busy
gcode:
    status_busy
[menu __main __lights __status_leds __logooff]
type: command
name: Logo Off
gcode:
    set_logo_leds_off

# [menu __main __lights __status_leds __nozzleledson]
# type: command
# name: Nozzle LEDs On
# gcode:
#     set_nozzle_leds_on

# [menu __main __lights __status_leds __nozzleledsoff]
# type: command
# name: Nozzle LEDs Off
# gcode:
#     set_nozzle_leds_off
